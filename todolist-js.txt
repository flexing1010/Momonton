
const toDoform = document.querySelector(".js-toDoForm"),
  toDoInput = toDoform.querySelector("input"),
  pendingList = document.querySelector(".js-pendingList"),
  finishedList = document.querySelector(".js-finishedList");

//this will be the name of the key in LS
const TODOS_LS = "toDos";
const TODOSDONE_LS = "toDosDone";

//this will be the name of the value in LS
let toDos = [];
let toDosDone = [];
let idNum = 1;

//function for array to filter through all the items in array
//and make a new array with filtered items


//this function is to 
function deleteToDo(event) {

  //선택한 btn의 parent(li)를 변수 설정
  const btn = event.target;
  const li = btn.parentNode;

  //선택된 btn의 parent(li)의 child를 제거  
  pendingList.removeChild(li);

  //todos array안에 있는 item들을 function(toDo)필터로 걸러낸다
  const cleanToDos = toDos.filter(function (toDo) {
    //toDo.id is a number, li.id is a string
    return toDo.id !== parseInt(li.id);
  });
  //toDos를 걸러진 cleanToDos로 업데이트
  toDos = cleanToDos;
  saveToDos();
}

function deleteToDoDone(event) {
  const btn = event.target;
  const li = btn.parentNode;
  finishedList.removeChild(li);
  const cleanToDosDone = toDosDone.filter(function (toDoDone) {
    //toDo.id is a number, li.id is a string
    return toDoDone.id !== parseInt(li.id);
  });
  toDosDone = cleanToDosDone;
  saveToDosDone();
}

function swtichToDos(event) {
  const btn = event.target;
  const li = btn.parentNode;
  //선택된 li의 firstChild(html에 span으로 돼 있다)의 innerText 속성을 설정 
  const span = li.firstChild.innerText;
  pendingList.removeChild(li);

  //deleteToDo와 같이 선택되어 html상에서 사라진 todo를 todo array에서 지운다
  const moveToDos = toDos.filter(function (toDo) {
    return toDo.id !== parseInt(li.id);
  });
  toDos = moveToDos;
  //toDos에서 선택된 item을 지우고 업데이트한 후 paintDoneToDo에 span의 내용(text of li)을 삽입
  paintDoneToDO(span);
  saveToDosDone();
  saveToDos();
}

function swtichToDosDone(event) {
  const btn = event.target;
  const li = btn.parentNode;
  const span = li.firstChild.innerText;
  finishedList.removeChild(li);

  const moveToDosDone = toDosDone.filter(function (toDoDone) {
    return toDoDone.id !== parseInt(li.id);
  });
  toDosDone = moveToDosDone;
  paintToDo(span);
  saveToDos();
  saveToDosDone();
}

function saveToDos() {
  //need to use stringify because i can only store sting value to LS
  localStorage.setItem(TODOS_LS, JSON.stringify(toDos));
}

function saveToDosDone() {
  localStorage.setItem(TODOSDONE_LS, JSON.stringify(toDosDone));
}

function paintToDo(text) {
  // the first li is just a name that we are giving it can be anything

  const li = document.createElement("li");
  const delBtn = document.createElement("button");
  const doneBtn = document.createElement("button");
  const span = document.createElement("span");
  doneBtn.innerHTML = "✅";
  doneBtn.addEventListener("click", swtichToDos);

  delBtn.innerHTML = "❌";
  delBtn.addEventListener("click", deleteToDo);
  //one of the way to give an non-repeating, random id
  const newId = idNum++;
  span.innerText = text;

  // to add variables(span/delBtn) to li(parent)
  li.appendChild(span);
  li.appendChild(delBtn);
  li.appendChild(doneBtn);
  // to give tag an id
  li.id = newId;
  pendingList.appendChild(li);
  const toDoObj = {
    //text value는 밑에 handleSubmit의  paintToDo(currentValue)에서 받아온다
    text: text,
    id: newId
  };
  toDos.push(toDoObj);

}

function handleSubmit(event) {
  event.preventDefault();
  const currentValue = toDoInput.value;
  paintToDo(currentValue);
  toDoInput.value = ""; //to make text disappear after input//
}

function loadToDos() {
  const loadedToDos = localStorage.getItem(TODOS_LS);
  if (loadedToDos !== null) {
    //to change the stringified value back to object
    const parsedToDos = JSON.parse(loadedToDos);
    //run function for each data in array (function for array)
    parsedToDos.forEach(function (toDo) {
      paintToDo(toDo.text);
    });
  }
}

function loadToDosDone() {
  const loadedToDosDone = localStorage.getItem(TODOSDONE_LS);
  if (loadedToDosDone !== null) {
    const parsedToDosDone = JSON.parse(loadedToDosDone);
    parsedToDosDone.forEach(function (toDoDone) {
      paintDoneToDO(toDoDone.text);
    });
  }
}

//finished에 새로운 value가 들어올때 화면에 출력하는 function
function paintDoneToDO(text) {
  const li = document.createElement("li"),
    delBtn = document.createElement("button"),
    doneBtn = document.createElement("button");

  doneBtn.innerHTML = "✅";
  delBtn.innerHTML = "❌";
  doneBtn.addEventListener("click", swtichToDosDone);
  delBtn.addEventListener("click", deleteToDoDone);

  const span = document.createElement("span");
  const newId = idNum++;
  span.innerText = text;

  li.appendChild(span);
  li.appendChild(delBtn);
  li.appendChild(doneBtn);
  li.id = newId;
  finishedList.appendChild(li);
  const toDoObj = {
    text: text,
    id: newId
  };
  toDosDone.push(toDoObj);
 }

function init() {
  loadToDos();
  loadToDosDone();
  toDoform.addEventListener("submit", handleSubmit);
}

init();
